// Mocks generated by Mockito 5.4.6 from annotations
// in uic_task/test/features/auth/domain/usecases/sign_in_anonymously_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:uic_task/core/exceptions/failure.dart' as _i5;
import 'package:uic_task/features/auth/domain/entities/user_entity.dart' as _i6;
import 'package:uic_task/features/auth/domain/repositories/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>
  signUpWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.UserEntity>(
                    this,
                    Invocation.method(#signUpWithEmailAndPassword, [], {
                      #email: email,
                      #password: password,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>
  signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.UserEntity>(
                    this,
                    Invocation.method(#signInWithEmailAndPassword, [], {
                      #email: email,
                      #password: password,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>.value(
                  _FakeEither_0<_i5.Failure, _i6.UserEntity>(
                    this,
                    Invocation.method(#signInAnonymously, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateUserBio({
    required String? uid,
    required String? fullName,
    required String? nickName,
    required String? phoneNumber,
    required String? gender,
    required DateTime? dateOfBirth,
    required String? address,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserBio, [], {
              #uid: uid,
              #fullName: fullName,
              #nickName: nickName,
              #phoneNumber: phoneNumber,
              #gender: gender,
              #dateOfBirth: dateOfBirth,
              #address: address,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#updateUserBio, [], {
                  #uid: uid,
                  #fullName: fullName,
                  #nickName: nickName,
                  #phoneNumber: phoneNumber,
                  #gender: gender,
                  #dateOfBirth: dateOfBirth,
                  #address: address,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Stream<_i6.UserEntity?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i4.Stream<_i6.UserEntity?>.empty(),
          )
          as _i4.Stream<_i6.UserEntity?>);
}
